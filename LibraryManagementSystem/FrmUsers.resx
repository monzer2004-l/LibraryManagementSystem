<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        0PLdvKRiAAAAAElFTkSuQmCC
</value>
  </data>
</root>